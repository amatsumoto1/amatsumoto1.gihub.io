{"version":3,"sources":["components/Header/Navbar.tsx","components/Header/NavItem.tsx","components/Header/index.tsx","hooks/useCanvas.ts","components/Canvas/index.tsx","components/Background/index.tsx","pages/Home/index.tsx","components/PageContent/index.tsx","pages/About/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","props","className","children","NavItem","link","text","to","Header","useCanvas","draw","onResize","canvasRef","useRef","canvasCtxRef","useEffect","current","getContext","animationFrameId","ctx","frameCount","render","window","requestAnimationFrame","cancelAnimationFrame","handleResize","addEventListener","removeEventListener","Canvas","ref","PARTICLE_COLORS","Background","particles","createParticle","width","height","color","getRandomColor","x","Math","random","y","vx","getRandomDirection","getRandomVelocity","vy","updateParticle","particle","sign","drawParticle","context","beginPath","arc","PI","fillStyle","fill","strokeStyle","stroke","floor","length","getNumParticles","canvasWidth","canvasHeight","area","ceil","_","canvas","offsetWidth","offsetHeight","clearRect","fillRect","totalParticles","i","push","initAllParticles","currentParticles","pop","Home","PageContent","About","href","App","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd568857.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.scss';\n\nconst Navbar: React.FC = (props) => {\n    return (\n        <nav className='header-nav'>\n            <ul>\n                {props.children}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport { Link } from \"react-router-dom\"\n\ntype NavItemProps = {\n    link: string,\n    text: string,\n}\n\nconst NavItem: React.VFC<NavItemProps> = (props: NavItemProps) => {\n    const { link, text } = props;\n\n    return (\n        <li className=\"header-nav__item\">\n            <Link to={link}>\n                {text}\n            </Link>\n        </li>\n    )\n}\n\nexport default NavItem;","import React from 'react';\nimport Navbar from './Navbar';\nimport NavItem from './NavItem';\nimport './index.scss';\n\nconst Header: React.VFC = () => {\n    return (\n        <header className='page-header'>\n            <Navbar>\n                <NavItem link='/' text='Home' />\n                <NavItem link='/about' text='About' />\n                <NavItem link='/' text='Projects' />\n                <NavItem link='/' text='Contact' />\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header;","import { useRef, useEffect } from 'react';\n\nconst useCanvas = (draw: (context: CanvasRenderingContext2D, frameCount: number) => void, onResize?: (context: CanvasRenderingContext2D) => void) => {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    const canvasCtxRef = useRef<CanvasRenderingContext2D | null>(null);\n\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\n            let ctx = canvasCtxRef.current;\n            let frameCount = 0;\n            let animationFrameId: number;\n\n            const render = () => {\n                if (ctx) {\n                    frameCount++;\n                    draw(ctx, frameCount);\n                }\n                animationFrameId = window.requestAnimationFrame(render);\n            };\n\n            render();\n\n            return () => {\n                window.cancelAnimationFrame(animationFrameId);\n            };\n        }\n    }, [draw]);\n\n    useEffect(() => {\n        if (onResize && canvasCtxRef.current) {\n            let ctx = canvasCtxRef.current;\n\n            const handleResize = () => {\n                onResize(ctx);\n            }\n            \n            window.addEventListener('resize', handleResize);\n        \n            return () => {\n                window.removeEventListener('resize', handleResize);\n            };\n        }\n    }, [onResize]);\n\n    return canvasRef;\n}\n\nexport default useCanvas;","import React from \"react\";\nimport useCanvas from '../../hooks/useCanvas';\n\ntype CanvasProps = {\n    draw: (context: CanvasRenderingContext2D, frameCount: number) => void,\n    handleResize?: (context: CanvasRenderingContext2D) => void\n}\n\nconst Canvas: React.FC<CanvasProps> = (props: CanvasProps) => {\n    const { draw, handleResize } = props;   \n    const canvasRef = useCanvas(draw, handleResize);\n\n    return <canvas ref={canvasRef} />\n}\n\nexport default Canvas;","import React from 'react';\nimport Canvas from '../Canvas';\nimport './index.scss';\n\nconst BACKGROUND_COLOR = '#2E5175';\nconst PARTICLE_COLORS = [\n    '#D788CB',\n    '#EEC3C3',\n    '#A7D3DA',\n    '#F0F5B6',\n    '#BBFAB2',\n    '#F7C78E'\n];\n\ntype Particle  = {\n    color: string,\n    x: number,\n    y: number,\n    vx: number,\n    vy: number\n}\n\nconst Background: React.VFC = () => {\n    const particles: Particle[] = [];\n\n    const createParticle =  (width: number, height: number): Particle => {\n        return {\n            color: getRandomColor(),\n            x: Math.random() * width,\n            y: Math.random() * height,\n            vx: getRandomDirection() * getRandomVelocity(),\n            vy: getRandomDirection() * getRandomVelocity()\n        } as Particle;\n    }\n\n    const initAllParticles = (width: number, height: number) => {\n        const totalParticles = getNumParticles(width, height);\n        for (let i = 0; i < totalParticles; i++) {\n            particles.push(createParticle(width, height));\n        }\n    }\n\n    const updateParticle = (particle: Particle, width: number, height: number) => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        if (particle.x >= width || particle.x <= 0) {\n            particle.vx = -Math.sign(particle.vx) * getRandomVelocity();\n        }\n\n        if (particle.y >= height || particle.y <= 0) {\n            particle.vy = - Math.sign(particle.vy) * getRandomVelocity();\n        }\n    }\n\n    const drawParticle = (context: CanvasRenderingContext2D, particle: Particle) => {\n        const { color, x, y } = particle;\n        context.beginPath();\n        context.arc(x, y, 5, 0, 2 * Math.PI);\n        context.fillStyle = color;\n        context.fill();\n        context.strokeStyle = color;\n        context.stroke();\n\n    }\n\n    const drawCanvas = (context: CanvasRenderingContext2D, _: number) => {\n        const canvas = context.canvas;\n        \n        canvas.width  = canvas.offsetWidth;\n        canvas.height = canvas.offsetHeight;\n\n        \n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.fillStyle = BACKGROUND_COLOR;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    \n        if (!particles.length) {\n            initAllParticles(canvas.width, canvas.height);\n        }\n\n        for (const particle of particles) {\n            updateParticle(particle, canvas.width, canvas.height);\n            drawParticle(context, particle);\n        }\n    }\n\n    const handleResize = (context: CanvasRenderingContext2D) => {\n        const { width, height } = context.canvas;\n        const totalParticles = getNumParticles(width, height);\n        const currentParticles = particles.length;\n        if (currentParticles > totalParticles) {\n            for (let i = currentParticles; i > totalParticles; i--) {\n                particles.pop();\n            }\n        }\n        else {\n            for (let i = currentParticles; i < totalParticles; i++) {\n                particles.push(createParticle(width, height));\n            }\n        }\n    }\n\n    const getRandomVelocity = (): number => {\n        return (Math.random() * 0.5 + 0.5);\n    }\n\n    const getRandomDirection = (): number => {\n        return (Math.random() > 0.5 ? 1 : -1);\n    }\n\n    const getRandomColor = (): string => {\n        return PARTICLE_COLORS[Math.floor(Math.random() * PARTICLE_COLORS.length)];\n    }\n\n    const getNumParticles = (canvasWidth: number, canvasHeight: number) => {\n        const area = canvasWidth * canvasHeight;\n\n        return Math.ceil(area / 8000);\n    }\n\n    return (\n        <div className='background'>\n            <Canvas draw={drawCanvas} handleResize={handleResize}/>\n        </div>\n    )\n}\n\nexport default Background;","import React from 'react';\nimport './index.scss';\n\nconst Home: React.VFC = () => {\n    return (\n        <div className='home-page'>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport './index.scss';\n\nconst PageContent: React.FC = (props) => {\n    return (\n        <div className='page-content'>\n            { props.children }\n        </div>\n    )\n}\n\nexport default PageContent;","import React from 'react';\nimport PageContent from '../../components/PageContent';\nimport './index.scss';\n\nconst About : React.VFC = () => {\n    return (\n        <div className='about-page'>\n            <PageContent>\n                <h1 className = 'about-page__header'>About Me</h1>\n                <p>I am a Full-Stack Software Engineer at <a href=\"https://www.rlicorp.com/\">RLI Insurance</a>, building websites \n                    for our customers and underwriters. I graduated  in 2018 from Cornell University with a Masters of Engineering\n                    in Computer Science. I also graduated from Cornell University in 2017 with a Bachelors of Science in Computer Science.\n                    I enjoy learning new things and being constantly challenged.\n                </p>\n            </PageContent>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport Header from './components/Header';\nimport Background from './components/Background';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport { Route, Routes, HashRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Router basename='/'>\n      <Background />\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/about' element = {<About />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}